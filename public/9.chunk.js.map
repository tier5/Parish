{"version":3,"sources":["/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register-routing.module.ts","/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.css","/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.html","/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.ts","/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.module.ts","/var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.service.ts"],"names":[],"mappings":"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","file":"9.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes,\n     RouterModule } from '@angular/router';\n\nimport { RegisterComponent} from \"./register.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent,\n    data: {\n      title: 'Register'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input.ng-invalid.ng-touched {\\n    border: 2px solid #a94442;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.css\n// module id = ../../../../../src/app/auth/register/register.component.css\n// module chunks = 9","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-4 col-md-offset-4\\\">\\n        <div class=\\\"login-panel panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\"><strong>Register</strong></div>\\n            <div class=\\\"panel-body\\\">\\n                <form [formGroup]=\\\"formRegister\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div *ngIf=\\\"!userRegisterStatus && responseReceived\\\" class=\\\"alert alert-danger\\\">\\n                        <strong>{{ userRegisteredMsg }}</strong>\\n                    </div>\\n                    <div *ngIf=\\\"userRegisterStatus && responseReceived\\\" class=\\\"alert alert-success\\\">\\n                        <strong>{{ userRegisteredMsg }}</strong>\\n                    </div>\\n                    <fieldset>\\n                        <!-- First Name -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"first_name\\\"\\n                                placeholder=\\\"First Name\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('first_name').invalid && formRegister.get('first_name').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('first_name').hasError('required')\\\">\\n                                Your First Name is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Last Name -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"last_name\\\"\\n                                placeholder=\\\"Last Name\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('last_name').invalid && formRegister.get('last_name').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('last_name').hasError('required')\\\">\\n                                Your Last Name is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Email -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"email\\\"\\n                                placeholder=\\\"Email Address\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('email').invalid && formRegister.get('email').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"formRegister.get('email').hasError('required')\\\">\\n                                   Your Email is Required!\\n                                </div>\\n                                <div *ngIf=\\\"formRegister.get('email').hasError('email')\\\">\\n                                    Enter a Proper Email!\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- Password -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"password\\\"\\n                                type=\\\"password\\\"\\n                                placeholder=\\\"Password\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('password').invalid && formRegister.get('password').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('password').hasError('required')\\\">\\n                                Your Password is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Confirm Password -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"confirm_password\\\"\\n                                type=\\\"password\\\"\\n                                placeholder=\\\"Confirm Password\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('confirm_password').invalid && formRegister.get('confirm_password').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" >\\n                                <div *ngIf=\\\"formRegister.get('confirm_password').hasError('required')\\\">\\n                                    Confirm password is Required!\\n                                </div>\\n                                <div *ngIf=\\\"formRegister.get('confirm_password').hasError('confirmPassword')\\\">\\n                                    Confirm Password didnot Match!\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"formRegister.invalid || userRegisterRequested\\\">\\n                            <i *ngIf=\\\"userRegisterRequested\\\" class=\\\"fa fa-spinner fa-pulse fa-lg fa-fw\\\"></i>\\n                            Register\\n                        </button>\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onReset()\\\">Reset</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"onNavigate()\\\">Login</button>\\n                    </fieldset>\\n                </form>\\n            </div>\\n        </div>\\n    </div><!-- /.col-->\\n</div><!-- /.row -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.html\n// module id = ../../../../../src/app/auth/register/register.component.html\n// module chunks = 9","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Response } from '@angular/http';\nimport { Router } from '@angular/router';\n\nimport { RegisterService } from './register.service';\n\n@Component( {\n\tselector: 'register',\n\ttemplateUrl: './register.component.html',\n\tstyleUrls: [ './register.component.css' ]\n} )\nexport class RegisterComponent {\n\t\n\t/** Variable declarations */\n\tformRegister: FormGroup;\n\tresponseReceived = false;\n\tuserRegisterStatus = false;\n\tuserRegisterRequested = false;\n\tuserRegisteredMsg: string;\n\t\n\t/** Service injection */\n\tconstructor(\n\t\tprivate registerService: RegisterService,\n\t\tprivate router: Router,\n\t\tprivate formBuilder: FormBuilder\n\t) { }\n\t\n\t/** Function to be executed when component initializes */\n\tngOnInit() {\n\t\tthis.formRegister = this.formBuilder.group( {\n\t\t\t'first_name' : new FormControl( null, Validators.required ),\n\t\t\t'last_name' : new FormControl( null, Validators.required ),\n\t\t\t'email' : new FormControl( null, [ Validators.required, Validators.email ] ),\n\t\t\t'password' : new FormControl( null, Validators.required ),\n\t\t\t'confirm_password' : new FormControl( null, Validators.required )\n\t\t}, {validator: this.confirmPassword} );\n\t}\n\t\n\t/** Custom confirm password validator */\n\tconfirmPassword = (control: AbstractControl): {[key: string]: boolean} => {\n\t\t\n\t\tconst pass = control.get('password');\n\t\tconst cnfPass = control.get('confirm_password');\n\t\t\n\t\tif (!pass || !cnfPass) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (pass.value === cnfPass.value){\n\t\t\treturn null\n\t\t} else{\n\t\t\tcontrol.get('confirm_password').setErrors( { confirmPassword: true } );\n\t\t\treturn { confirmPassword: true };\n\t\t}\n\t}\n\t\n\t/** Function call on submit */\n\tonSubmit() {\n\t\tthis.userRegisterRequested = true;\n\t\tconst body = this.formRegister.value;\n\t\tthis.registerService.register( body )\n\t\t.subscribe(\n\t\t\t( response: Response ) => {\n\t\t\t\tif(response.json().status){\n\t\t\t\t\tthis.userRegisterStatus = true;\n\t\t\t\t\tthis.userRegisteredMsg = response.json().message;\n\t\t\t\t\tthis.userRegisterRequested = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.userRegisterStatus = false;\n\t\t\t\t\tthis.userRegisteredMsg = response.json().error;\n\t\t\t\t\tthis.userRegisterRequested = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t( error: Response ) => {\n\t\t\t\tthis.userRegisterStatus = false;\n\t\t\t\tthis.userRegisteredMsg = error.json().error;\n\t\t\t\tthis.responseReceived = true;\n\t\t\t\tthis.userRegisterRequested = false;\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.responseReceived = false;\n\t\t\t\t}, 5000)\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.formRegister.reset();\n\t\t\t\tthis.responseReceived = true;\n\t\t\t\tthis.userRegisterRequested = false;\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.responseReceived = false;\n\t\t\t\t}, 5000)\n\t\t\t}\n\t\t);\n\t}\n\t\n\t/** Function call to reset form */\n\tonReset() {\n\t\tthis.formRegister.reset();\n\t}\n\t\n\t/** Function call to navigate to login page */\n\tonNavigate() {\n\t\tthis.router.navigate(['/login']);\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.component.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { NgModule } from '@angular/core';\n\nimport { RegisterComponent} from \"./register.component\";\nimport { RegisterRoutingModule } from \"./register-routing.module\";\nimport { RegisterService} from \"./register.service\";\n\n@NgModule({\n  imports: [\n  \tCommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  declarations: [ RegisterComponent],\n  providers: [ RegisterService ]\n})\nexport class RegisterModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.module.ts","import { Http, Headers } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { environment } from '../../../environments/environment.prod';\n\n@Injectable()\nexport class RegisterService {\n\t\n\t/** Service injection */\n\tconstructor( private http: Http ) { }\n\t\n\t/** Function call for registration */\n\tregister( body: { name: string, email: string, password: string, confirm_password: string } ): Observable<any> {\n\t\tconst header = new Headers( { 'X-Requested-With': 'XMLHttpRequest' } );\n\t\treturn this.http.post( environment.API_URL + 'sign-up', body, { headers: header } );\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/Parish/resources/assets/Parish/src/app/auth/register/register.service.ts"],"sourceRoot":"webpack:///"}