{"version":3,"sources":["/var/www/Parish/resources/assets/Parish/src/app/auth/register/register-routing.module.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.css","/var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.html","/var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/register/register.module.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/register/register.service.ts","/var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.css","/var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.html","/var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.ts","/var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.module.ts","/var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.service.ts"],"names":[],"mappings":"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","file":"5.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes,\n     RouterModule } from '@angular/router';\n\nimport { RegisterComponent} from \"./register.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent,\n    data: {\n      title: 'Register'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input.ng-invalid.ng-touched {\\n    border: 2px solid #a94442;\\n}\\n\\n.StripeElement {\\n    background-color: white;\\n    padding: 8px 12px;\\n    border-radius: 4px;\\n    border: 1px solid #eeeeee;\\n    box-shadow: 0 1px 3px 0 #e6ebf1;\\n    transition: box-shadow 150ms ease;\\n}\\n\\n.StripeElement--focus {\\n    box-shadow: 0 1px 3px 0 #cfd7df;\\n}\\n\\n.StripeElement--invalid {\\n    border-color: #fa755a;\\n}\\n\\n.StripeElement--webkit-autofill {\\n    background-color: #fefde5 !important;\\n}\\n.content {\\n    padding-top: 30px;\\n    padding-bottom: 30px;\\n}\\n\\n/***\\nPricing table\\n***/\\n.pricing {\\n    position: relative;\\n    margin-bottom: 15px;\\n    border: 3px solid #eee;\\n}\\n\\n.pricing-active {\\n    border: 3px solid #30A5FF;\\n    margin-top: -10px;\\n}\\n\\n.pricing:hover {\\n    border: 3px solid #30A5FF;\\n}\\n\\n.pricing:hover h4 {\\n    color: #fff;\\n}\\n\\n.pricing-head {\\n    text-align: center;\\n}\\n\\n.pricing-head h3,\\n.pricing-head h4 {\\n    margin: 0;\\n    line-height: normal;\\n}\\n\\n.pricing-head h3 span,\\n.pricing-head h4 span {\\n    display: block;\\n    margin-top: 5px;\\n    font-size: 14px;\\n    font-style: italic;\\n}\\n\\n.pricing-head h3 {\\n    font-weight: 300;\\n    color: #fafafa;\\n    padding: 10px 0;\\n    font-size: 20px;\\n    background: #1c1c1c;\\n}\\n\\n.pricing-head h4 {\\n    color: #fff;\\n    padding: 5px 0;\\n    font-weight: 300;\\n    background: #1c1c1c;\\n    border-bottom: solid 1px #f5f9e7;\\n}\\n\\n.pricing-head-active h4 {\\n    color: #fff;\\n}\\n\\n.pricing-head h4 i {\\n    top: -8px;\\n    font-size: 28px;\\n    font-style: normal;\\n    position: relative;\\n}\\n\\n.pricing-head h4 span {\\n    top: -10px;\\n    font-size: 14px;\\n    font-style: normal;\\n    position: relative;\\n}\\n\\n.back-btn{\\n    display: inline-block;\\n    color: #fff;\\n    font-size: 15px;\\n    background: #30a5ff;\\n    padding: 5px 20px;\\n    margin-bottom: 10px;\\n    border-radius: 5px;\\n    box-shadow: 1px 1px 1px 1px #333;\\n    text-decoration: none;\\n}\\n\\n/*Pricing Content*/\\n.pricing-content li {\\n    color: #888;\\n    font-size: 12px;\\n    padding: 7px 15px;\\n    border-bottom: solid 1px #f5f9e7;\\n}\\n.pricing-content{\\n    background: #fff;\\n    margin: 0;\\n}\\n\\n\\n/*Pricing Footer*/\\n.pricing-footer {\\n    font-size: 11px;\\n    line-height: 17px;\\n    text-align: center;\\n    padding: 0 20px 19px;\\n    background: #1c1c1c;\\n    display: inline-block;\\n    width: 100%;\\n}\\n.pricing-footer p{\\n    color: #fff;\\n    margin: 10px 0;\\n    font-size: 15px;\\n}\\n\\n/*Priceing Active*/\\n.price-active,\\n.pricing:hover {\\n    z-index: 9;\\n}\\n\\n.price-active h4 {\\n    color: #36d7ac;\\n}\\n\\n.no-space-pricing .pricing:hover {\\n    transition: box-shadow 0.2s ease-in-out;\\n}\\n\\n.no-space-pricing .price-active .pricing-head h4,\\n.no-space-pricing .pricing:hover .pricing-head h4 {\\n    color: #36d7ac;\\n    padding: 15px 0;\\n    font-size: 80px;\\n    transition: color 0.5s ease-in-out;\\n}\\n\\n.yellow-crusta.btn {\\n    color: #FFFFFF;\\n    background-color: #30A5FF;\\n}\\n.yellow-crusta.btn:hover,\\n.yellow-crusta.btn:focus,\\n.yellow-crusta.btn:active,\\n.yellow-crusta.btn.active {\\n    color: #FFFFFF;\\n    background-color: #1d86d6;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.css\n// module id = ../../../../../src/app/auth/register/register.component.css\n// module chunks = 5","module.exports = \"<div class=\\\"row\\\" [hidden]=\\\"!planSelected\\\">\\n    <div class=\\\"col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-4 col-md-offset-4\\\">\\n        <div class=\\\"login-panel panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <i class=\\\"fa fa-angle-double-left fa-pull-right\\\" aria-hidden=\\\"true\\\" (click)=\\\"onUndoSubscription()\\\"></i>\\n                <strong>Register</strong>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <form [formGroup]=\\\"formRegister\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div *ngIf=\\\"!userRegisterStatus && responseReceived\\\" class=\\\"alert alert-danger\\\">\\n                        <strong>{{ userRegisteredMsg }}</strong>\\n                    </div>\\n                    <div *ngIf=\\\"userRegisterStatus && responseReceived\\\" class=\\\"alert alert-success\\\">\\n                        <strong>{{ userRegisteredMsg }}</strong>\\n                    </div>\\n                    <fieldset>\\n                        <!-- First Name -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"first_name\\\"\\n                                placeholder=\\\"First Name\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('first_name').invalid && formRegister.get('first_name').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('first_name').hasError('required')\\\">\\n                                Your First Name is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Last Name -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"last_name\\\"\\n                                placeholder=\\\"Last Name\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('last_name').invalid && formRegister.get('last_name').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('last_name').hasError('required')\\\">\\n                                Your Last Name is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Email -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"email\\\"\\n                                placeholder=\\\"Email Address\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('email').invalid && formRegister.get('email').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"formRegister.get('email').hasError('required')\\\">\\n                                   Your Email is Required!\\n                                </div>\\n                                <div *ngIf=\\\"formRegister.get('email').hasError('email')\\\">\\n                                    Enter a Proper Email!\\n                                </div>\\n                                <div *ngIf=\\\"formRegister.get('email').hasError('emailTaken')\\\">\\n                                    Email has already been taken!\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- Password -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"password\\\"\\n                                type=\\\"password\\\"\\n                                placeholder=\\\"Password\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('password').invalid && formRegister.get('password').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formRegister.get('password').hasError('required')\\\">\\n                                Your Password is Required!\\n                            </div>\\n                        </div>\\n\\n                        <!-- Confirm Password -->\\n                        <div class=\\\"form-group\\\">\\n                            <input\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"confirm_password\\\"\\n                                type=\\\"password\\\"\\n                                placeholder=\\\"Confirm Password\\\"\\n                            >\\n                        </div>\\n                        <div *ngIf=\\\"formRegister.get('confirm_password').invalid && formRegister.get('confirm_password').touched\\\">\\n                            <div class=\\\"alert alert-danger\\\" >\\n                                <div *ngIf=\\\"formRegister.get('confirm_password').hasError('required')\\\">\\n                                    Confirm password is Required!\\n                                </div>\\n                                <div *ngIf=\\\"formRegister.get('confirm_password').hasError('confirmPassword')\\\">\\n                                    Confirm Password did not Match!\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- Stripe Custom Form -->\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <label for=\\\"card-element\\\">\\n                                    Credit or debit card\\n                                </label>\\n                                <div id=\\\"card-element\\\">\\n                                    <!-- a Stripe Element will be inserted here. -->\\n                                </div>\\n\\n                                <!-- Used to display form errors -->\\n                                <div id=\\\"card-errors\\\" role=\\\"alert\\\"></div>\\n                            </div>\\n                        </div>\\n\\n                        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"formRegister.invalid || userRegisterRequested\\\">\\n                            <i *ngIf=\\\"userRegisterRequested\\\" class=\\\"fa fa-spinner fa-pulse fa-lg fa-fw\\\"></i>\\n                            Register\\n                        </button>\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"userRegisterRequested\\\" (click)=\\\"onReset()\\\">Reset</button>\\n                    <!--    <app-subscription></app-subscription> -->\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"userRegisterRequested\\\" (click)=\\\"onNavigate()\\\">Login</button>\\n                    </fieldset>\\n                </form>\\n            </div>\\n        </div>\\n    </div><!-- /.col-->\\n</div><!-- /.row -->\\n<div class=\\\"container content\\\" *ngIf=\\\"!planSelected\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <a href=\\\"/\\\" class=\\\"back-btn\\\">< Back</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <!-- Pricing -->\\n        <div class=\\\"col-md-3\\\" *ngFor=\\\"let plan of planList\\\">\\n            <div class=\\\"pricing hover-effect\\\">\\n                <div class=\\\"pricing-head\\\">\\n                    <h3>\\n                        {{ plan.name }}\\n                        <span></span>\\n                    </h3>\\n                    <h4>\\n                        <i>$</i> <i>{{ plan.amount/100 }}</i>\\n                        <span>Per Month</span>\\n                    </h4>\\n                </div>\\n                <ul class=\\\"pricing-content list-unstyled\\\">\\n                    <li>\\n                        At vero eos\\n                    </li>\\n                    <li>\\n                        No Support\\n                    </li>\\n                    <li>\\n                        Fusce condimentum\\n                    </li>\\n                    <li>\\n                        Ut non libero\\n                    </li>\\n                    <li>\\n                        Consecte adiping elit\\n                    </li>\\n                </ul>\\n                <div class=\\\"pricing-footer\\\">\\n                    <p>\\n                        {{ plan.statement_descriptor }}\\n                    </p>\\n                    <a href=\\\"javascript:;\\\" class=\\\"btn yellow-crusta\\\" (click)=\\\"onSelectSubscription(plan.id)\\\">\\n                        Sign Up\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <!--//End Pricing -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.html\n// module id = ../../../../../src/app/auth/register/register.component.html\n// module chunks = 5","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Response } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { Observable } from \"rxjs/Observable\";\n\nimport { RegisterService } from './register.service';\n\n@Component( {\n\tselector: 'register',\n\ttemplateUrl: './register.component.html',\n\tstyleUrls: [ './register.component.css' ]\n} )\nexport class RegisterComponent {\n\t\n\t/** Variable declarations */\n\tformRegister: FormGroup;\n\tresponseReceived = false;\n\tuserRegisterStatus = false;\n\tuserRegisterRequested = false;\n\tuserRegisteredMsg: string;\n    planList: any;\n\n    stripe: any;\n    elements: any;\n    style: any;\n    card: any;\n    planId: number = 1;\n    planSelected: boolean = false;\n\n\t/** Service injection */\n\tconstructor( private registerService: RegisterService,\n\t\t         private router: Router,\n\t\t         private formBuilder: FormBuilder ) { }\n\t\n\t/** Function to be executed when component initializes */\n\tngOnInit() {\n\n        this.stripe = Stripe('pk_test_SIRpnt5y8OAGeLprrzbQKrKd');\n        this.elements = this.stripe.elements();\n\n        // Custom styling can be passed to options when creating an Element.\n        this.style = {\n            base: {\n                // Add your base input styles here. For example:\n                fontSize: '16px',\n                lineHeight: '24px',\n            },\n        };\n\n        // Create an instance of the card Element\n        this.card = this.elements.create('card', {style: this.style});\n\n        // Add an instance of the card Element into the `card-element` <div>\n        this.card.mount('#card-element');\n\n        this.card.addEventListener('change', ({error}) => {\n            const displayError = document.getElementById('card-errors');\n            if (error) {\n                displayError.textContent = error.message;\n            } else {\n                displayError.textContent = '';\n            }\n        });\n\n        /** Function to get plan list */\n        this.registerService.listPlans()\n            .subscribe(\n                ( response: Response ) => {\n                    if(response.json().status) {\n                        this.planList = response.json().plans;\n                    }\n                },\n                ( error: Response ) => {\n                    console.log(error.json());\n                }\n            );\n\n        /** Form Initialization */\n\t\tthis.formRegister = this.formBuilder.group( {\n\t\t\t'first_name' : new FormControl( null, Validators.required ),\n\t\t\t'last_name' : new FormControl( null, Validators.required ),\n\t\t\t'email' : new FormControl( null, [ Validators.required, Validators.email ], this.validateEmail.bind(this) ),\n\t\t\t'password' : new FormControl( null, Validators.required ),\n\t\t\t'confirm_password' : new FormControl( null, Validators.required )\n\t\t}, {validator: this.confirmPassword} );\n\t}\n\t\n\t/** Custom confirm password validator */\n\tconfirmPassword = (control: AbstractControl): {[key: string]: boolean} => {\n\t\t\n\t\tconst pass = control.get('password');\n\t\tconst cnfPass = control.get('confirm_password');\n\t\t\n\t\tif (!pass || !cnfPass) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (pass.value === cnfPass.value){\n\t\t\treturn null\n\t\t} else{\n\t\t\tcontrol.get('confirm_password').setErrors( { confirmPassword: true } );\n\t\t\treturn { confirmPassword: true };\n\t\t}\n\t};\n\n\t/** Function to validate email*/\n\tvalidateEmail( control: FormControl ): Promise<any> | Observable<any> {\n        const promise = new Promise<any>( (resolve, reject) => {\n            this.registerService.validateEmail({ email: control.value })\n                .subscribe(\n                    (response: Response) => {\n                        if( response.json().status ){\n                            resolve(null);\n                        } else {\n                            resolve( { emailTaken: true } );\n                        }\n                    }\n                );\n        } );\n\t    return promise;\n    }\n\n\t/** Function call on submit */\n\tonSubmit() {\n        const body = this.formRegister.value;\n\n        this.stripe.createToken(this.card).then((result) => {\n            if (result.error) {\n\n                // Inform the user if there was an error\n                var errorElement = document.getElementById('card-errors');\n                errorElement.textContent = result.error.message;\n\n            } else {\n\n                // Send the token to your server\n                this.userRegisterRequested = true;\n                this.registerService.register( { ...body, token: result.token, planId: this.planId } )\n                .subscribe(\n                \t( response: Response ) => {\n                \t\tif(response.json().status){\n                \t\t\tthis.userRegisterStatus = true;\n                \t\t\tthis.card.clear();\n                \t\t\tthis.userRegisteredMsg = response.json().message;\n                \t\t\tthis.userRegisterRequested = false;\n\t\t\t                setTimeout( () => {\n\t\t\t\t                this.router.navigate( [ '/login' ] );\n\t\t\t                }, 5000)\n\t\t\t                \n                \t\t} else {\n                \t\t\tthis.userRegisterStatus = false;\n                \t\t\tthis.userRegisteredMsg = response.json().error;\n                \t\t\tthis.userRegisterRequested = false;\n                \t\t}\n                \t},\n                \t( error: Response ) => {\n                \t\tthis.userRegisterStatus = false;\n                \t\tthis.userRegisteredMsg = error.json().error;\n                \t\tthis.responseReceived = true;\n                \t\tthis.userRegisterRequested = false;\n                \t\tsetTimeout( () => {\n                \t\t\tthis.responseReceived = false;\n                \t\t}, 5000)\n                \t},\n                \t() => {\n                \t\tthis.formRegister.reset();\n                \t\tthis.responseReceived = true;\n                \t\tthis.userRegisterRequested = false;\n                \t\tsetTimeout( () => {\n                \t\t\tthis.responseReceived = false;\n                \t\t}, 5000)\n                \t}\n                );\n\n            }\n        });\n\n\t}\n\n\t/** Function to choose subscription*/\n\tonSelectSubscription(id: number) {\n\t    this.planId = id;\n\t    this.planSelected = true;\n    }\n\n    /** Function to undo subscription*/\n    onUndoSubscription() {\n        this.planId = 0;\n        this.planSelected = false;\n        this.formRegister.reset();\n        this.card.clear();\n    }\n\t\n\t/** Function call to reset form */\n\tonReset() {\n\t\tthis.formRegister.reset();\n\t}\n\t\n\t/** Function call to navigate to login page */\n\tonNavigate() {\n\t\tthis.router.navigate(['/login']);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register.component.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { NgModule } from '@angular/core';\n\nimport { RegisterComponent } from \"./register.component\";\nimport { RegisterRoutingModule } from \"./register-routing.module\";\nimport { RegisterService } from \"./register.service\";\nimport { SubscriptionModule } from \"../../subscription/subscription.module\";\n\n@NgModule({\n  imports: [\n  \tCommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    SubscriptionModule\n  ],\n  declarations: [ RegisterComponent],\n  providers: [ RegisterService ]\n})\nexport class RegisterModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register.module.ts","import { Http, Headers } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { environment } from '../../../environments/environment.prod';\n\n@Injectable()\nexport class RegisterService {\n\t\n\t/** Service injection */\n\tconstructor( private http: Http ) { }\n\n    /** Function call for registration */\n\tregister( body: any ): Observable<any> {\n\t\tconst header = new Headers( { 'X-Requested-With': 'XMLHttpRequest' } );\n\t\treturn this.http.post( environment.API_URL + 'sign-up', body, { headers: header } );\n\t}\n\n    /** Function to validate requested email */\n    validateEmail(body: { email: string }): Observable<any> {\n        const header = new Headers( { 'X-Requested-With': 'XMLHttpRequest' } );\n        return this.http.post( environment.API_URL + 'validate-email', body, {headers: header} );\n    }\n\n    /** Function to list plans */\n    listPlans(): Observable<any> {\n        const header = new Headers( { 'X-Requested-With': 'XMLHttpRequest' } );\n        return this.http.get( environment.API_URL + 'list-plan', {headers: header} );\n    }\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/register/register.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.css\n// module id = ../../../../../src/app/subscription/subscription.component.css\n// module chunks = 5","module.exports = \"<button type=\\\"button\\\" (click)=\\\"handlePayment()\\\">\\n  Add Credits to your Account\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.html\n// module id = ../../../../../src/app/subscription/subscription.component.html\n// module chunks = 5","import { Component, HostListener, OnInit } from '@angular/core';\nimport { environment } from \"../../environments/environment.prod\";\n\nimport { SubscriptionService } from \"./subscription.service\";\n\n@Component({\n  selector: 'app-subscription',\n  templateUrl: './subscription.component.html',\n  styleUrls: ['./subscription.component.css']\n})\nexport class SubscriptionComponent implements OnInit {\n\n    handler: any;\n    amount = 500;\n\n    constructor(private subscriptionService: SubscriptionService ) { }\n\n    ngOnInit() {\n        this.handler = StripeCheckout.configure({\n            key: environment.stripeKey,\n            image: 'https://stripe.com/img/documentation/checkout/marketplace.png',\n            locale: 'auto',\n            token: token => {\n                this.subscriptionService.processPayment(token, this.amount);\n            }\n        });\n    }\n    handlePayment() {\n        this.handler.open({\n            name: 'FireStarter',\n            excerpt: 'Deposit Funds to Account',\n            amount: this.amount\n        });\n    }\n\n    @HostListener('window:popstate')\n    onPopstate() {\n        this.handler.close()\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from \"@angular/http\";\n\nimport { SubscriptionComponent } from './subscription.component';\nimport { SubscriptionService } from \"./subscription.service\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule\n  ],\n  exports: [ SubscriptionComponent ],\n  declarations: [ SubscriptionComponent ],\n  providers: [ SubscriptionService ]\n})\nexport class SubscriptionModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { environment } from \"../../environments/environment.prod\";\nimport { AuthService } from \"../auth/auth.service\";\n\n@Injectable()\nexport class SubscriptionService {\n\n    userId: string;\n\n    /** Injecting services to be used in this component */\n    constructor( private http: Http,\n                 private authService: AuthService ) {\n        if( this.authService.isAuthenticated() ) {\n            this.refreshHeader();\n        }\n    }\n\n\n    /** Initializing the different headers to be passed with each api call */\n    headers = new Headers( {\n        'X-Requested-With': 'XMLHttpRequest'\n    } );\n\n    /** Refreshing the header for authenticated users */\n    refreshHeader() {\n        this.headers.set('Authorization', 'Bearer ' + this.authService.getToken().token);\n    }\n\n\n    processPayment(token: any, amount: number) {\n        const payment = { token, amount };\n        return this.http.post( environment.API_URL + 'report/all-report', payment, { headers: this.headers } );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/subscription/subscription.service.ts"],"sourceRoot":"webpack:///"}