{"version":3,"sources":["/var/www/Parish/resources/assets/Parish/src/app/profile-details/profile-routing.module.ts","/var/www/Parish/resources/assets/Parish/src/app/profile-details/profile.module.ts","/var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.css","/var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.html","/var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.ts"],"names":[],"mappings":"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","file":"profile.module.chunk.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {ProfileComponent} from \"./profile/profile.component\";\n\nconst profileRoutes: Routes = [\n\t{ path: '', component: ProfileComponent }\n];\n\n@NgModule({\n\timports: [ RouterModule.forChild(profileRoutes) ],\n\texports: [ RouterModule\t]\n})\nexport class ProfileRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/profile-details/profile-routing.module.ts","/** module to load component and route for show and edit profile **/\n\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport {ProfileRoutingModule} from \"./profile-routing.module\";\nimport {FormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n\tdeclarations: [ ProfileComponent ],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tProfileRoutingModule\n\t],\n\tproviders: []\n})\n\nexport class ProfileModule { }\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/profile-details/profile.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".passwordDiv .form-group {\\n\\tdisplay: inline-block;\\n\\twidth: 100%;\\n}\\n.passwordDiv .form-group label{\\n    display: block;\\n}\\n.passwordDiv .form-group input {\\n    width: 72%;\\n    margin-right: 18px;\\n    margin-bottom: 20px;\\n}\\n\\n.btn-default {\\n\\twidth: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.css\n// module id = ../../../../../src/app/profile-details/profile/profile.component.css\n// module chunks = profile.module","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <h3 class=\\\"page-header\\\">Profile - Update</h3>\\n    </div>\\n</div><!--/.row-->\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">Profile</div>\\n            <div class=\\\"panel-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-12\\\">\\n                        <div *ngIf=\\\"!responseStatus && responseReceived\\\" class=\\\"alert alert-danger\\\">\\n                            <strong>{{ responseMsg }}</strong>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-lg-12\\\">\\n                        <div *ngIf=\\\"responseStatus && responseReceived\\\" class=\\\"alert alert-success\\\">\\n                            <strong>{{ responseMsg }}</strong>\\n                        </div>\\n                    </div>\\n                </div>\\n                <form\\n                        #updateProfileForm=\\\"ngForm\\\"\\n                        (submit)=\\\"onSubmit(updateProfileForm)\\\">\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"fname\\\">First Name</label>\\n                                <input\\n                                        id=\\\"fname\\\"\\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter...\\\"\\n\\n                                        name=\\\"first_name\\\"\\n                                        required\\n                                        [ngModel]=\\\"profileData.first_name\\\"\\n                                        #firstName=\\\"ngModel\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div\\n                                    class=\\\"alert alert-danger\\\"\\n                                    *ngIf=\\\"firstName.invalid && firstName.touched\\\">\\n                                First Name is Required!\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"lname\\\">Last Name</label>\\n                                <input\\n                                        id=\\\"lname\\\"\\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter...\\\"\\n\\n                                        name=\\\"last_name\\\"\\n                                        required\\n                                        [ngModel]=\\\"profileData.last_name\\\"\\n                                        #lastName=\\\"ngModel\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div\\n                                    class=\\\"alert alert-danger\\\"\\n                                    *ngIf=\\\"lastName.invalid && lastName.touched\\\">\\n                                Last Name is Required!\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row passwordDiv\\\" *ngIf=\\\"!isAdmin\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"pasword\\\">Password</label>\\n                                <input\\n                                        id=\\\"pasword\\\"\\n                                        class=\\\"form-control col-md-9\\\"\\n                                        name=\\\"uniqueKey\\\"\\n                                        required\\n                                        [ngModel]=\\\"profileData.uniqueKey\\\"\\n                                        #uniqueKey=\\\"ngModel\\\" readonly>\\n                                <button (click)=\\\"onResetPassword()\\\" type=\\\"button\\\"\\n                                        class=\\\"btn btn-default col-md-3\\\">Reset Password\\n                                </button>\\n\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row passwordDiv\\\" *ngIf=\\\"!isAdmin\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"username\\\">Username</label>\\n                                <input\\n                                        id=\\\"username\\\"\\n                                        class=\\\"form-control col-md-9\\\"\\n                                        name=\\\"parish_id\\\"\\n                                        required\\n                                        [ngModel]=\\\"profileData.parish_id\\\"\\n                                        #parish_id=\\\"ngModel\\\">\\n                                <button (click)=\\\"onResetUsername(updateProfileForm)\\\" type=\\\"button\\\"\\n                                        class=\\\"btn btn-default col-md-3\\\" [disabled] = \\\"!updateProfileForm.value.parish_id || !activateReset\\\">Reset Username\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <button class=\\\"btn btn-primary\\\"\\n                                    [disabled]=\\\"( updateProfileForm.invalid && updateProfileForm.touched )\\\">\\n                                <i *ngIf=\\\"showLoader\\\" class=\\\"fa fa-spinner fa-pulse fa-lg fa-fw\\\"></i>\\n                                Submit\\n                            </button>\\n                            <button\\n                                    type=\\\"button\\\"\\n                                    class=\\\"btn btn-default\\\"\\n                                    (click)=\\\"onReset(updateProfileForm)\\\"\\n                            >Reset\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.html\n// module id = ../../../../../src/app/profile-details/profile/profile.component.html\n// module chunks = profile.module","/** Show and update logged in users profile */\n\nimport { Component } from \"@angular/core\";\nimport { NgForm } from '@angular/forms';\nimport {Response} from \"@angular/http\";\n\nimport { AuthService } from \"../../auth/auth.service\";\nimport { ProfileService } from \"../profile.service\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\n\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent{\n\t\n\tprofileData = {\n\t\t\n\t\tid          : 0,\n\t\tuser_id     : 0,\n\t\tlast_name   : '',\n\t\tuniqueKey   : '',\n\t\tfirst_name  : '',\n\t\tparish_id   : ''\n\t};\n\t\n\tresponseReceived    : boolean = false;\n\tresponseStatus      : boolean = false;\n\tactivateReset       : boolean = true;\n\tresponseMsg         : string  = '';\n\t\n\tshowLoader          : boolean = false;\n\tisAdmin             : boolean = false;\n\t\n\t/** Injecting services to be used in this component */\n\tconstructor( private profileService: ProfileService,\n\t             private activatedRoute: ActivatedRoute,\n\t             private authService: AuthService,\n\t             private router: Router\n\t) { }\n\t\n\tngOnInit() {\n\t\t/** checking for admin */\n\t\tconst user_type = this.authService.getToken().user_type;\n\t\tif(user_type ==1){\n\t\t\tthis.isAdmin = true;\n\t\t}\n\t\t\n\t\tthis.activatedRoute.params.subscribe(\n\t\t\t(params: Params) => {\n\t\t\t\tthis.profileService.profileToEdit()\n\t\t\t\t\t.subscribe(\n\t\t\t\t\t\t(response: Response) => {\n\t\t\t\t\t\t\tthis.profileData = response.json().userDetail;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t},\n\t\t\t(error: Response) => {\n\t\t\t\tif( error.status === 401) {\n\t\t\t\t\tthis.authService.removeToken();\n\t\t\t\t\tthis.router.navigate( ['/login'] );\n\t\t\t\t}\n\t\t\t\tthis.responseStatus = false;\n\t\t\t\tthis.responseMsg = error.json().error;\n\t\t\t},\n\t\t\t() => { }\n\t\t);\n\t}\n\t\n\t/** Function call when form is submitted */\n\tonSubmit(updateProfileForm: NgForm) {\n\t\tthis.showLoader = true;\n\t\tthis.profileService.editProfile(updateProfileForm.value )\n\t\t\t.subscribe(\n\t\t\t\t( response: Response ) => {\n\t\t\t\t\tthis.showLoader     = false;\n\t\t\t\t\tthis.responseStatus = response.json().status;\n\t\t\t\t\t\n\t\t\t\t\tif ( response.json().status ) {\n\t\t\t\t\t\tthis.responseStatus = true;\n\t\t\t\t\t\tthis.responseMsg = response.json().message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.responseMsg = '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t( error: Response ) => {\n\t\t\t\t\tif( error.status === 401) {\n\t\t\t\t\t\tthis.authService.removeToken();\n\t\t\t\t\t\tthis.router.navigate( ['/login'] );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.showLoader = false;\n\t\t\t\t\tthis.responseStatus = false;\n\t\t\t\t\tthis.responseReceived = true;\n\t\t\t\t\tthis.responseMsg = error.json().error;\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tthis.responseReceived = false;\n\t\t\t\t\t}, 3000 )\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.responseReceived = true;\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tthis.responseReceived = false;\n\t\t\t\t\t}, 3000 )\n\t\t\t\t}\n\t\t\t);\n\t}\n\t\n\t/** Function call to reset form */\n\tonReset(updateProfileForm: NgForm) {\n\t\t\n\t\tthis.profileService.profileToEdit()\n\t\t\t.subscribe(\n\t\t\t\t(response: Response) => {\n\t\t\t\t\tupdateProfileForm.form.patchValue({\n\t\t\t\t\t\tfirst_name: this.profileData.first_name,\n\t\t\t\t\t\tlast_name: this.profileData.last_name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t}\n\t\n\t/** Function call to reset password */\n\tonResetPassword(){\n\t\tthis.profileService.resetPassword()\n\t\t\t.subscribe(\n\t\t\t\t(response: Response) => {\n\t\t\t\t\tthis.responseStatus = response.json().status;\n\t\t\t\t\tif ( response.json().status ) {\n\t\t\t\t\t\tthis.responseMsg = response.json().message;\n\t\t\t\t\t\tthis.profileData.uniqueKey = response.json().password;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.responseMsg = '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(error: Response) => {\n\t\t\t\t\tif ( error.status === 401 ) {\n\t\t\t\t\t\tthis.authService.removeToken();\n\t\t\t\t\t\tthis.router.navigate( [ '/login' ] );\n\t\t\t\t\t}\n\t\t\t\t\tthis.responseStatus = false;\n\t\t\t\t\tthis.responseMsg = error.json().error;\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\t/** Function call to reset username */\n\tonResetUsername(updateProfileForm){\n\t\tthis.activateReset  = false;\n\t\tconst formData      = new FormData();\n\t\tformData.append(\"username\",updateProfileForm.value.parish_id);\n\n\t\tthis.profileService.resetUsername(formData)\n\t\t\t.subscribe(\n\t\t\t\t(response: Response) => {\n\t\t\t\t\tthis.responseStatus = response.json().status;\n\t\t\t\t\tif ( response.json().status ) {\n\t\t\t\t\t\tthis.activateReset  \t= true;\n\t\t\t\t\t\tthis.responseMsg \t\t= response.json().message;\n\t\t\t\t\t\tthis.responseReceived \t= true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.responseMsg \t= '';\n\t\t\t\t\t\tthis.activateReset \t=  true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(error: Response) => {\n\t\t\t\t\tif ( error.status === 401 ) {\n\t\t\t\t\t\tthis.authService.removeToken();\n\t\t\t\t\t\tthis.router.navigate( [ '/login' ] );\n\t\t\t\t\t}\n\t\t\t\t\tthis.activateReset  = true;\n\t\t\t\t\tthis.responseStatus = false;\n\t\t\t\t\tthis.responseMsg \t= error.json().error;\n\t\t\t\t}\n\t\t\t);\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/profile-details/profile/profile.component.ts"],"sourceRoot":"webpack:///"}