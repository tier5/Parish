{"version":3,"sources":["/var/www/Parish/resources/assets/Parish/src/app/auth/login/login-routing.module.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.css","/var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.html","/var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/login/login.module.ts","/var/www/Parish/resources/assets/Parish/src/app/auth/login/login.service.ts"],"names":[],"mappings":"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","file":"login.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from \"./login.component\";\n\nconst loginRoutes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    data: {\n      title: 'Login'\n    }\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(loginRoutes) ],\n  exports: [ RouterModule ]\n})\nexport class LoginRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input.ng-invalid.ng-touched {\\n    border: 2px solid #a94442;\\n}\\n\\n@media screen and (max-width: 480px){\\n\\t.btn {\\n\\t    width: 100%;\\n\\t    margin: 5px 0;\\n\\t}\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.css\n// module id = ../../../../../src/app/auth/login/login.component.css\n// module chunks = login.module","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 hidden-xs hidden-sm\\\"></div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"login-panel panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\"><strong>Log In</strong></div>\\n                <div class=\\\"panel-body\\\">\\n                    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n                        <div\\n                            *ngIf=\\\"!loginRequestStatus && responseReceived\\\"\\n                            class=\\\"alert alert-danger\\\"\\n                        >\\n                            <strong>{{ loginRequestResponseMsg }}</strong>\\n                        </div>\\n                        <fieldset>\\n                            <div class=\\\"form-group\\\">\\n                                <input\\n                                    class=\\\"form-control\\\"\\n                                    placeholder=\\\"Username\\\"\\n                                    name=\\\"username\\\"\\n                                    ngModel\\n                                    required\\n                                    #username=\\\"ngModel\\\"\\n                                >\\n                            </div>\\n                            <div\\n                                class=\\\"alert alert-danger\\\"\\n                                *ngIf=\\\"username.invalid && username.touched\\\"\\n                            >\\n                                Username is Required!\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group\\\">\\n                                <input\\n                                    class=\\\"form-control\\\"\\n                                    placeholder=\\\"Password\\\"\\n                                    type=\\\"password\\\"\\n                                    name=\\\"password\\\"\\n                                    ngModel\\n                                    required\\n                                    #password=\\\"ngModel\\\"\\n                                >\\n                            </div>\\n                            <div\\n                                class=\\\"alert alert-danger\\\"\\n                                *ngIf=\\\"password.invalid && password.touched\\\"\\n                            >\\n                                Password is Required!\\n                            </div>\\n\\n                            <!--<div class=\\\"checkbox\\\">-->\\n                                <!--<label>-->\\n                                    <!--<input name=\\\"remember\\\" type=\\\"checkbox\\\" value=\\\"Remember Me\\\">Remember Me-->\\n                                <!--</label>-->\\n                            <!--</div>-->\\n\\n                            <button\\n                                [disabled]=\\\"form.invalid\\\"\\n                                class=\\\"btn btn-primary\\\"\\n                            >\\n                                <i *ngIf=\\\"showLoader\\\" class=\\\"fa fa-spinner fa-pulse fa-lg fa-fw\\\"></i>\\n                                Login\\n                            </button>\\n                            <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"showLoader\\\" (click)=\\\"onReset(form)\\\">Reset</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [disabled]=\\\"showLoader\\\" (click)=\\\"onForgotPassword()\\\">Forgot Password</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"showLoader\\\" (click)=\\\"onNavigate()\\\">Register</button>\\n                        </fieldset>\\n                    </form>\\n                </div>\\n            </div>\\n        </div><!-- /.col-->\\n        <div class=\\\"col-md-3 hidden-xs hidden-sm\\\"></div>\\n    </div><!-- /.row -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.html\n// module id = ../../../../../src/app/auth/login/login.component.html\n// module chunks = login.module","import { Component } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { LoginService } from './login.service';\nimport {AuthService} from \"../auth.service\";\nimport { ProvinceZoneAreaParishService } from \"../../province-zone-area-parish/province-zone-area-parish.service\";\nimport { ProfileService } from \"../../profile-details/profile.service\";\nimport { PaymentService } from \"../../payment-details/payment.service\";\nimport { ReportService } from '../../report/report.service';\nimport { WemService } from \"../../wem-list/wem.service\";\nimport {DashboardService} from \"../../dashboard/dashboard.service\";\n\n@Component( {\n\tselector: 'login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n} )\nexport class LoginComponent {\n\t\n\t/** Variable declarations */\n\tresponseReceived = false; // Track is some response has been recieved or not\n\tloginRequestStatus = false; // Track response of login request\n\tshowLoader = false; // Track if loader should be shown or not\n\tloginRequestResponseMsg: string; // Store success or error message from backend depending on response\n\t\n\t/** Service injection */\n\tconstructor( private pzapService: ProvinceZoneAreaParishService,\n\t\t\t\t private loginService: LoginService,\n\t             private router: Router,\n\t             private profileService: ProfileService,\n\t             private paymentService: PaymentService,\n\t             private reportService: ReportService,\n\t             private wemService: WemService,\n\t             private dashboardService: DashboardService) { }\n\t\n\t/** Function call on submit */\n\tonSubmit( formSignIn: NgForm ) {\n\t\tthis.showLoader = true;\n\t\tconst body = {\n\t\t\tusername: formSignIn.value.username,\n\t\t\tpassword: formSignIn.value.password\n\t\t};\n\t\tthis.loginService.login( body )\n\t\t.subscribe(\n\t\t\t( response: Response ) => {\n\t\t\t\t\n\t\t\t\tthis.showLoader = false;\n\t\t\t\tif(response.json().status){\n\t\t\t\t\tlocalStorage.setItem( 'loggedInUserData', JSON.stringify(response.json()) );\n\t\t\t\t\tthis.loginRequestStatus = true;\n\t\t\t\t\tthis.loginRequestResponseMsg = response.json().message;\n\t\t\t\t\tthis.pzapService.refreshHeader();\n\t\t\t\t\tthis.profileService.refreshHeader();\n\t\t\t\t\tthis.profileService.refreshHeader();\n\t\t\t\t\tthis.paymentService.refreshHeader();\n\t\t\t\t\tthis.reportService.refreshHeader();\n\t\t\t\t\tthis.wemService.refreshHeader();\n\t\t\t\t\tthis.dashboardService.refreshHeader();\n\t\t\t\t} else {\n\t\t\t\t\tthis.loginRequestStatus = false;\n\t\t\t\t\tthis.loginRequestResponseMsg = response.json().error;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t( error: Response ) => {\n\t\t\t\tconsole.log( error );\n\t\t\t\tthis.loginRequestStatus = false;\n\t\t\t\tthis.loginRequestResponseMsg = error.json().error;\n\t\t\t\tthis.showLoader = false;\n\t\t\t\tthis.responseReceived = true;\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.responseReceived = false;\n\t\t\t\t}, 5000)\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t\n\t\t\t\tformSignIn.reset();\n\t\t\t\tthis.router.navigate( [ '/dashboard' ] );\n\t\t\t}\n\t\t);\n\t}\n\t\n\t/** Function call to reset form */\n\tonReset( formSignIn: NgForm ) {\n\t\tformSignIn.reset();\n\t}\n\n    /** Function call to navigate to forgot password page */\n    onForgotPassword() {\n        this.router.navigate(['/forgot-password']);\n\t}\n\t\n\t/** Function call to navigate to registration page */\n\tonNavigate() {\n\t\tthis.router.navigate(['/register']);\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login.component.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginService } from './login.service';\n\n@NgModule( {\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tHttpModule,\n\t\tLoginRoutingModule\n\t],\n\tdeclarations: [ LoginComponent ],\n\tproviders: [ LoginService ]\n} )\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login.module.ts","import { Headers, Http  } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from '../../../environments/environment.prod';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class LoginService {\n\t\n\t/** Service injection */\n\tconstructor( private http: Http ) { }\n\t\n\t/** Function call for logging in*/\n\tlogin( body: { username: string, password: string } ): Observable<any> {\n\t\tconst header = new Headers( { 'X-Requested-With': 'XMLHttpRequest' } );\n\t\treturn this.http.post( environment.API_URL + 'sign-in', body, { headers: header } );\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/Parish/resources/assets/Parish/src/app/auth/login/login.service.ts"],"sourceRoot":"webpack:///"}